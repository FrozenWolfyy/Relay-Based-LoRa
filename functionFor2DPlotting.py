import matplotlib.pyplot as plt
import numpy as np

x=[1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38]
#
# xx=x[0:33]
#
#
# dup15pow = [456827.85279968363,450611.3279996665,445438.3103996596,444067.9423996623,432334.2335996342,424241.2799996161,423934.233599614,412601.7535996269,407117.5167996265,408363.2639996267,399099.3151996363,379315.35359967005,386825.3951996587,379806.2847996616,358027.75039970304,373236.09599967714,373168.4607996795,354100.6335997052,349265.63839971635,341531.827199729,361385.3951996938,344245.5039997213,322231.21919975843,318702.6943997657,316699.90399976855,327866.7007997521,296496.3327997966,303231.74399978825,312666.6495997718,300372.5055997902,277330.91839982534,293094.783999805,254500.30079986612,267139.30239984684,253775.97439986706,251174.29759987,248452.27519987672,256190.56639986043
# ]
#
# dup16pow = [448390.5535996698,440759.91039964755,424512.4351996168,414330.265599611,405291.2383996332,391545.907199649,379405.107199669,361449.0879997007,336848.53759973374,331606.60479974316,320554.1375997606,319841.68959976063,307155.0463997823,289883.7247998114,287313.6383998156,274000.4607998368,263420.8511998536,240259.68639988647,247015.29599987628,222752.46079991682,207666.09919993908,199133.3119999471,178535.14239996293,178126.7711999623,162233.26719997515,158805.2991999774,141104.0511999902,105539.68640001933,110290.94400001554,86555.67360001519,78404.99200001311,68236.59520001036,65107.09760000856,64857.47200000682,56321.28000000104,35745.79199999959,33368.57599999994,15873.484800000011
# ]
#
# dup17pow = [460849.58719969215,462027.1615996887,461112.4479996917,459938.8415996878,463733.93919969525,460725.81119968696,461341.05599968566,463880.39679968683,460556.74879969435,462406.9119996846,464253.54239969543,462759.9615996956,463179.16159969557,461588.45439969713,461381.32479969255,464062.59199969436,464293.1199996909,462018.2527996882,461736.5247996845,464636.05759969866,461117.1327996861,464447.35999968473,464043.7503996949,463315.4559996956,464560.8447996968,464967.9103996979,467573.6575997089,463118.668799691,465039.9999996995,465712.1279996975,467628.33919970057,467855.94879970513,465042.17599969555,467362.9439996948,468833.715199703,468652.4159997075,476245.7087997251,482808.95999973465
# ]
#
# dup18pow = [464057.9071996886,461855.4367996945,462322.636799688,459735.9871996854,463376.66559969576,461913.80479968665,464930.4063996983,462116.8895996882,465807.6159996991,461594.7007996881,463287.7567996824,467262.51519969694,463014.6047996938,462909.1839996916,460542.00319968554,464187.0335996918,458339.14879968297,463678.7711996956,462231.34719969315,461710.8479996902,461772.0063996903,463082.9055996964,465530.62399969593,463857.6383996975,464365.8495996951,464107.5711996959,467012.42879969627,464247.29599969427,465048.9343996999,465376.6655996951,464926.8479996956,467106.9951997065,469814.271999704,468338.2527997073,465537.8431996989,465919.385599697,475873.10079972586,479445.2735997134
# ]
#
# dup26pow = [450295.88479966705,438133.88799964637,422972.9535996256,412303.4879996169,399196.62079963286,383022.259199662,376309.5807996753,361777.715199699,351444.6847997093,338629.42719973257,334382.87359974254,322840.80639975844,327654.78399975045,295603.19999980484,283575.5263998214,258388.19839986105,272185.0111998391,251246.1567998742,241846.9887998867,226878.3871999102,211026.20159993685,191907.71199995207,201484.05759994476,164147.58399997366,156500.53119998032,147091.3535999877,129751.52640000044,124748.72320000347,109872.84480001598,98179.8144000183,87571.32800001539,71727.71840001093,63209.67680000921]
#
# dup26=[78.8997241932047,79.00105709832235,78.77268584720697,77.48945580413447,77.19695480600923,77.37439379143824,76.84767869235415,76.1400549375106,75.71385631226119,75.41349862829412,74.63638272400499,73.11927950120702,72.91390798843642,72.2039899816879,71.76572929022197,71.30455036596594,69.93966771111187,69.22467246564759,68.20622382933918,68.01537065270068,68.17540793216216,67.66633390206638,65.50197937116982,66.67415571019318,64.91366961427268,64.43626209270256,64.85146858644211,63.46010011625687,63.30418794018325,63.0258552850494,62.55652667081219,61.71624638425567,61.691117550184714]
#
# for i in range(len(dup18pow)):
#     dup16pow[i]=dup16pow[i]/1000
#     dup17pow[i]=dup17pow[i]/1000
#     dup18pow[i]=dup18pow[i]/1000
#     dup15pow[i]=dup15pow[i]/1000
#     if(i < len(dup26pow)):
#         dup26pow[i]=dup26pow[i]/1000
#         xx[i]=xx[i]*5
#     x[i]=x[i]*5
#
# plt.plot(x, dup15pow, label = "GYRN")
# plt.plot(x, dup16pow, label = "GYRY")
# plt.plot(x, dup17pow, label = "GNRY")
# plt.plot(x, dup18pow, label = "GNRN")
# plt.plot(xx, dup26pow, label = "Dynamic Allocation")
#
# plt.xlabel('Relay Radius')
# plt.ylabel('Power Consumed by relays')
# plt.legend()
# plt.show()
#
#
#
# dup19 = [80.85366373184007,81.05753571951138,80.39946655460378,80.13865782686075,79.4370687576801,80.10132903884228,79.93964079638705,79.67560638661335,79.13822696312315,77.94754421725364,78.39159465127571,77.29382761240602,77.4983127670904,76.92924719866244,75.7363020799551,75.55368304888235,75.7907829163915,74.60887911097853,74.3901588593496,73.76240952622469,72.1506935226405,71.98092141664017,72.27302155612007,71.39584907706009,70.8072871328874,70.23461700640637,68.91224580903761,69.06409798094538,69.27793507114393,68.3528471335346,68.05836352095949,66.95625593004394,67.73735573395349,67.13849978558576,66.65442798620917,66.72951910047192,65.69202537521312,64.97286959153743]
#
# dup20 =[80.69406434683849,79.93204624773396,80.5079220379349,80.48144043768579,80.13416526838684,79.51445631968551,79.3247951679608,79.14252875859094,79.01528943419487,78.3095262563308,78.29953500132545,77.83909929167403,76.8149532467928,75.95084176855369,76.14430254054338,74.05744775368906,74.69337843621383,74.1500346037584,73.74089422952947,72.99635349015637,72.37923339008701,71.46838454410342,71.21504837507429,70.89780141226832,70.16027750720055,69.46661743381219,69.14107387860447,68.87770768259693,68.35539403412105,67.10730931497508,66.96051572150444,67.82983301637105,66.53507398219178,66.09690629902377,66.16809963189814,65.60006127557725,64.73120875128953,64.32812719343472]
#
# dup21=[80.5787271415184,80.30719867455133,80.35381917084496,80.03469939960097,79.28845447049704,80.1482644787147,79.6773168641597,79.38936329295551,78.39833727997033,78.09955379138687,77.62332608815055,76.62657431191549,76.34366657338194,76.38022836868524,75.44961080513835,74.6554117784221,74.5614862172042,73.56369657112283,72.97636424867719,72.39368635835628,71.52639638917557,71.57206553644083,70.6586475621217,70.1574728306902,69.82596302565756,68.70575302294041,68.72295195243463,67.93624819668364,67.63401825736983,67.28929180393361,66.64976852654766,66.59525748671626,66.20976888222057,65.96807824050828,66.4016870229374,65.10512995678195,65.10580899938387,64.08027149411016]
#
# dup22=[80.29444401041273,80.14537682320184,80.26461110469253,79.49262722809343,79.3499730089323,79.58768127324217,78.60552672396827,78.71481109510668,78.65850886107569,77.4818717960936,77.52221343058564,76.95935112996526,76.0611330780702,75.2886066258382,75.1263625799145,74.25806161526806,74.191232017812,72.49496882950163,72.95034900979468,71.63037204064393,70.92892544081842,70.75308194972443,70.12708033180728,69.34942665674771,69.37828001415158,68.3275522730268,67.80978357370361,67.82505717277685,67.26458370018848,66.5840391662586,66.27260332570546,66.85706186393371,65.46646183082605,64.92793628813409,63.873745263708216,64.20867934075854,63.95157431063919,64.02458850115315]
#
# dup23=[79.76523636815148,80.96392905363645,79.59727241860902,80.18660170056437,80.14625757426565,78.74131570117235,79.57494132413484,78.15805477561068,77.77162020290234,76.65092635037668,77.84105689727393,76.03168738028778,75.65805284278252,74.4118498770566,73.82768632014825,73.76889902393441,72.61892115809167,72.14946533787996,71.25146764335638,71.71385594440521,70.99037526417835,69.98987723871781,69.0023408418676,68.02787070151408,67.8403918251188,67.81158840886732,66.69463786766437,66.22872436805729,66.82112461617295,65.66158483952442,65.07270419783755,65.59347450370558,65.11934229005408,64.83464824851579,63.567101527188484,62.87444728949591,63.51635604666782,63.33142933092227]
#
#
#
#
# plt.plot(x, dup19, label = "Alpha = 0.5")
# plt.plot(x, dup20, label = "Alpha = 0.6")
# plt.plot(x, dup21, label = "Alpha = 0.7")
# plt.plot(x, dup22, label = "Alpha = 0.8")
# plt.plot(x, dup23, label = "Alpha = 0.9")
#
# plt.xlabel('Relay Radius')
# plt.ylabel('FDR Rate')
# plt.legend()
# plt.show()
#
#
# dup19pow=[458751.2831996856,448771.1231996593,447973.683199659,433977.420799636,432637.59359962714,428823.44959962415,428788.556799623,414415.8719996208,403072.2815996412,405986.7903996326,400524.8511996434,398656.8703996454,387405.9775996591,376337.4079996733,381112.2431996673,372907.11039967707,353494.9375997147,360873.90719969873,344087.5007997219,351281.2031997064,348298.82879971096,338582.27199973084,328304.9983997477,318932.96639975905,308143.6671997832,308744.93439977523,318577.8687997606,294774.5535997997,286218.7519998153,293896.78079979925,278120.0639998262,273763.83999983425,260016.87039986486]
#
# dup20pow=[452603.31519967207,451614.1055996745,440951.67999965174,433845.8111996337,428751.76959962986,423717.119999613,413425.0495996153,405152.7679996314,388272.05119965866,387977.7535996587,376036.83839968324,376303.05279967416,365486.33599968784,356932.4543997076,354249.062399713,358328.678399701,337958.93759972724,336857.9583997314,320488.4479997574,317360.0511997645,304175.2063997832,308979.788799777,296061.9519997969,286070.5023998142,283848.67839981813,292941.03039980924,274059.57119983225,263226.5727998478,248548.58239987568,249000.60159987243,245106.50879987964,223165.9775999168,238025.65119990433]
#
# dup21pow=[451593.1903996691,448725.4015996627,434116.7103996368,425392.8703996162,422930.6111996182,411242.13759962004,404228.4543996289,393903.74399964773,395400.2943996467,379422.182399667,379700.1471996708,373321.31839968346,363119.76959969196,334495.46239973453,337777.4335997305,330877.05599974154,313820.441599773,311117.36319977615,304683.80159978394,292383.99999980483,291120.63999980583,271117.2863998391,280024.8575998254,255826.48319986244,244062.43839988083,257717.9647998602,232559.84639990103,236281.599999894,216121.80479992912,205872.8959999425,197822.82239994936,195334.39999994895,189526.1439999589]
#
# dup22pow=[451943.3471996707,438795.0335996461,428282.47039962735,421337.31839961204,411936.4607996214,403535.76959963434,400771.53279963456,391402.49599964777,370646.5279996855,366094.8991996898,355351.93599970744,338506.03519973066,337855.9999997272,323615.2319997478,315498.90559976513,310118.9119997776,292190.89919980493,291334.1183998059,268937.7279998417,277774.43839982984,274072.7295998335,253767.9359998648,238798.15679988996,244240.76799988112,217911.88479992427,224640.4607999144,211588.8383999355,186677.78559995754,177095.4239999645,180808.65279996034,163513.75359997447,144211.5583999891,147737.1647999891]
#
# dup23pow=[452234.5727996722,441514.0095996551,428551.09119962965,406508.6207996265,399070.87359963794,400267.8527996404,378764.7743996731,372557.18399968254,362353.1263996955,360192.92159970116,339256.7807997247,332096.66559973825,331943.0911997406,319495.0655997599,291123.5071998065,287109.8623998108,285066.4959998173,273998.36159983656,257321.03679986187,236749.49119989466,230700.62079990347,231095.21919990494,222929.5615999181,211965.84959993424,190070.5535999537,177492.63359996377,181993.70239995944,166096.69119997197,132260.94079999835,133452.4415999974,138082.81599999423,112401.61280001374,116059.69920001147]
#
# for i in range(len(dup19pow)):
#     dup19pow[i]=dup19pow[i]/1000
#     dup20pow[i]=dup20pow[i]/1000
#     dup21pow[i]=dup21pow[i]/1000
#     dup22pow[i]=dup22pow[i]/1000
#     dup23pow[i]=dup23pow[i]/1000
#
#
#
# plt.plot(xx, dup19pow, label = "Alpha = 0.5")
# plt.plot(xx, dup20pow, label = "Alpha = 0.6")
# plt.plot(xx, dup21pow, label = "Alpha = 0.7")
# plt.plot(xx, dup22pow, label = "Alpha = 0.8")
# plt.plot(xx, dup23pow, label = "Alpha = 0.9")
#
# plt.xlabel('Relay Radius')
# plt.ylabel('Power Consumed By relays')
# plt.legend()
# plt.show()
#
# def normalize(arr, t_min, t_max):
#     norm_arr = []
#     diff = t_max - t_min
#     diff_arr = max(arr) - min(arr)
#     for i in arr:
#         temp = (((i - min(arr))*diff)/diff_arr) + t_min
#         norm_arr.append(temp)
#     return norm_arr
#
# dup21powN = normalize(dup21pow,0,100)
# dup21N = normalize(dup21,0,100)
#
# dup21N = dup21N[0:33]
#
# for i in range(len(dup21N)):
#     dup21N[i]=100-dup21N[i]
#
# plt.plot(xx, dup21powN,label = 'Normalise Frame Loss Rate')
# plt.plot(xx, dup21N,label='Normalised power consumed')
# plt.legend()
# plt.show()
#
#
# dup15=[80.21854401624402,80.28698201133153,80.4822531953579,81.07972562940944,79.6089565545218,80.85453680762666,79.24345956524283,80.0408862102092,79.70978082714696,79.56479075864718,79.83750279877685,78.37916160039822,79.35825411170816,78.92284502358532,78.5088343959162,78.61441720378923,77.98877402744777,77.41887635617549,77.23545386291212,76.87242744621848,77.1679498635932,76.81132236778848,75.92896726212558,75.51489884476288,75.93759330935288,75.62368254454782,75.44128695673184,74.48244380436765,75.2008070515989,74.74518375948419,74.55756566094823,74.0695264212521,72.75994182472941,72.70822245032886,72.82463870547018,72.06629313642318,71.85399554604462,73.49900689644441
# ]
#
# dup16=[80.35528467073532,80.53152977379072,80.36479948133103,79.60206144713615,79.29008536310862,79.19911501832247,79.20356388027685,78.2161581621507,78.12298246150122,77.01869917573713,76.56672256291974,75.71673896298569,74.77746230238397,74.28875246164817,73.97908339348339,73.81000475389177,72.20126558905278,71.79829385992417,71.15880123742954,70.66339578765837,69.94388484865938,69.18782516231595,69.31578486276817,68.36397543717607,67.53654941377158,67.37028046665928,66.28606900956095,66.60451562605517,65.04419731055278,64.74467360764609,65.30049954771525,64.82615005662451,64.66458079208445,63.66949507773299,62.281680747132384,62.75277146783608,62.6383144649723,63.55288229978784]
#
# dup17=[81.02512929705466,80.64726921455586,80.27997268356233,80.52499393037297,79.87267897631595,79.66295676114113,79.66150002819617,79.10110612302886,79.78841389678813,79.36746687802292,79.03385007633571,78.17028644838147,78.05715533711358,77.59806387623013,76.1794472470258,76.13687007363941,76.02508102550236,75.88804012447059,74.90481185227901,74.91625850380142,73.59587111815553,73.8778884486262,72.71093487686576,72.62889834402819,71.37701361741598,72.14703734631983,71.32953868020621,69.9964938344054,69.01387267981502,69.41054061119468,69.02798866895043,68.3989985463354,67.99563598367536,67.53676647261145,67.65515047217772,66.43495731831794,66.81893206241529,65.498904035388]
#
# dup18=[80.00853009068791,81.09297855599088,80.30073678803222,80.2182038566093,80.74332808745963,80.18002072375951,80.42132568763817,80.65825403291817,79.04768423750296,79.46967297954642,80.42913845063387,79.89343205850629,80.12205861262963,80.29577845468526,79.21301604082343,79.60037841840197,78.79011720539995,79.43198799827785,79.17037243507767,78.66717313390262,79.30791299038219,79.01955852595992,78.82012507354747,79.16846321128492,76.61185942450122,77.19569051463681,75.76081306608731,76.36691879705214,76.95532376260448,77.05982257280525,76.25023209693998,76.50520447296252,75.78563493447257,76.35911827553831,74.319798593047,75.06176705212512,75.4393648573656,74.9001001808433]
#
#
# plt.plot(x, dup15, label = "GYRN")
# plt.plot(x, dup16, label = "GYRY")
# plt.plot(x, dup17, label = "GNRY")
# plt.plot(x, dup18, label = "GNRN")
# plt.plot(xx, dup26, label = "Dynamic Allocation")
#
# plt.xlabel('Relay Radius')
# plt.ylabel('FDR Rate')
# plt.legend()
# plt.show()

dup27 = [78.53015981131512,74.4778100502373,71.51901843629193,67.07572912233212,63.084911359311334,59.17314931216338,55.24367279746468,51.797931733037245,48.55189802238773,45.51900644140218]

dup28= [77.75670973846319,73.68441974130202,69.14665746181892,65.84506939982907,61.841172668205076,57.91175945640033,54.03576748453871,50.94061479203755,47.42183318824411,44.62807397926013]

dup29 = [75.97381380127915,71.83034326338527,67.5187669513816,63.60473380960243,60.77824066255872,56.79554064190661,53.17138737170124,49.75836073255013,46.61612275738026,43.324057761052266]

dup30 = [73.20070126421581,70.04611696992525,65.94261957407143,61.43780353907297,58.02162521334708,55.64390881405224,51.615033100890464,48.69124357823551,45.36031219461799,42.53052221235805]

dup31 = [72.64037775551202,67.77864510642688,63.4318239453425,59.87205769014527,56.045668306090384,52.935977627237364,49.327647550314865,46.94956079502073,43.85437349902537,41.5783928309]

xx=x[1:1+len(dup27)]

for i in range(len(xx)):
    xx[i]=50*xx[i]

plt.plot(xx, dup27, label = "Alpha = 0.5")
plt.plot(xx, dup28, label = "Alpha = 0.75")
plt.plot(xx, dup29, label = "Alpha = 1.0")
plt.plot(xx, dup30, label = "Alpha = 1.25")
plt.plot(xx, dup31, label = "Alpha = 1.50")
plt.xlabel('Number of Sensors')
plt.ylabel('FDR Rate')
plt.legend()
plt.show()
